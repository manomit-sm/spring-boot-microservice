version: '2.1'

services:
  product:
    build: product-service
    mem_limit: 512m
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  recommendation:
    build: recommendation-service
    mem_limit: 512m
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  review:
    depends_on:
      mysql:
        condition: service_healthy
    build: review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  product-composite:
    build: microservices/product-composite-service
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  mongodb:
    image: mongo:6.0.4
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60
  mysql:
    image: mysql:8.0.32
    mem_limit: 512m
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=admin
      - MYSQL_DATABASE=review-db
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=admin
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 2s
      retries: 60
  gateway:
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_SSL_KEY_STORE=file:/keystore/edge-test.p12
      - SERVER_SSL_KEY_STORE_PASSWORD=testtest
    build: cloud-gateway
    volumes:
      - $PWD/keystore:/keystore
    mem_limit: 512m
    ports:
      - "8443:8443"
  config-server:
    build: spring-cloud/config-server
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
      - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
      - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
      - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
    volumes:
      - $PWD/config-repo:/config-repo